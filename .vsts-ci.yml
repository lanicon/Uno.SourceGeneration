jobs:
- job: Windows_VS2019

  pool:
    vmImage: 'windows-2019'

  steps:
  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: DotNetCoreInstaller@2
    inputs:
      version: '3.0.100'
      
  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: '$(build.sourcesdirectory)\build\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno Source Generation Tasks"
      SignPackageDescription: "Uno Source Generation Tasks"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: DotNetCoreCLI@2
    displayName: Validate DotNetCore CLI build
    inputs:
      command: build
      arguments: "--configuration Release"
      workingDirectory: $(build.sourcesdirectory)\src\Uno.SampleCoreApp

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: unosourcegenerator-drop
      ArtifactType: Container



- job: Windows_VS2017

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: DotNetCoreInstaller@2
    inputs:
      version: '3.0.100'
      
  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build

  - task: DotNetCoreCLI@2
    displayName: Validate DotNetCore CLI build
    inputs:
      command: build
      arguments: "--configuration Release"
      workingDirectory: $(build.sourcesdirectory)\src\Uno.SampleCoreApp



- job: Linux
  container: nventive/wasm-build:1.4.1

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: DotNetCoreInstaller@2
    inputs:
      version: '3.0.100'

  - bash: msbuild /r /p:Configuration=Release ./src/Uno.SourceGenerator.Linux.sln # /bl:$(build.artifactstagingdirectory)/linux-build.binlog
    displayName: Build
    
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: unosourcegenerator-drop
      ArtifactType: Container

- job: macOS

  strategy:
    matrix:
      Xamarin_6_4_0:
        XamarinVersion: 6_4_0
      Xamarin_6_0_0:
        XamarinVersion: 6_0_0
      Xamarin_5_18_1:
        XamarinVersion: 5_18_1
      Xamarin_5_16_0:
        XamarinVersion: 5_16_0
      Xamarin_5_12_0:
        XamarinVersion: 5_12_0

  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  pool:
    vmImage: 'macOS-10.13'

  steps:
  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: DotNetCoreInstaller@2
    inputs:
      version: '3.0.100'

  - bash: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(XamarinVersion)"
    displayName: Select Xamarin Version

  - bash: msbuild /r /p:Configuration=Release ./src/Uno.SourceGenerator.Linux.sln # /bl:$(build.artifactstagingdirectory)/macos-build.binlog
    displayName: Build
    
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: unosourcegenerator-drop
      ArtifactType: Container
