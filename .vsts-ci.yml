jobs:
- job: Windows_VS2019

  pool:
    vmImage: 'windows-2019'

  strategy:
    matrix:
      NetCore_5_0:
        NETCORE_VERSION: 5.0.100-preview.5.20279.10
        NETCORE_PREVIEW: True
      NetCore_3_1:
        NETCORE_VERSION: 3.1.x
        NETCORE_PREVIEW: False
      NetCore_3_0:
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)\.nuget\packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645
    RestoreForceEvaluate: true

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages
     
  - task: GitVersion@5
    inputs:
      configFilePath: '$(build.sourcesdirectory)\gitversion.yml'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 3.1.x CLI
    inputs:
      version: 3.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core $(NETCORE_VERSION) CLI
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet
      
  - powershell: .\build\build.ps1 -script build\build.cake
    displayName: Build

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: '$(build.sourcesdirectory)\build\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno Source Generation Tasks"
      SignPackageDescription: "Uno Source Generation Tasks"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: DotNetCoreCLI@2
    displayName: Validate DotNetCore CLI build
    inputs:
      command: build
      arguments: "--configuration Release"
      workingDirectory: $(build.sourcesdirectory)\src\Uno.SampleCoreApp

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: unosourcegenerator-drop
      ArtifactType: Container

- job: Windows_VS2017
  dependsOn:
  - Windows_VS2019

  variables:
    SAMPLES_BUILD: true
    NUGET_PACKAGES: $(Pipeline.Workspace)\.nuget\packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  pool:
    vmImage: 'vs2017-win2016'

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages
     
  - task: GitVersion@5
    inputs:
      configFilePath: '$(build.sourcesdirectory)\gitversion.yml'

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)\unosourcegenerator-drop\build'
        targetFolder: $(build.sourcesdirectory)\src\PackageCache
      
  - task: MSBuild@1
    inputs:
      solution: '$(build.sourcesdirectory)/src/Uno.SourceGenerator.Samples.Windows.sln'
      msbuildArguments: /m /r /p:configuration=Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/windows-sample-build.binlog

  # Update .NET core after msbuild, otherwise this error happens:
  #
  #    Error : The current .NET SDK does not support targeting .NET Standard 2.0.  Either target .NET Standard 1.6 or lower, or use a version of the .NET SDK that supports .NET Standard 2.0.
  #
  - task: DotNetCoreInstaller@2
    inputs:
      version: '3.0.100'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: Validate .NET Core 3.0 CLI build
    inputs:
      command: build
      arguments: "--configuration Release -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer)  /bl:$(build.artifactstagingdirectory)/binlog/windows-sample-build-netcore.binlog"
      workingDirectory: $(build.sourcesdirectory)/src/Uno.SampleCoreApp
            
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container

- job: Linux

  dependsOn:
  - Windows_VS2019

  strategy:
    matrix:
      # Restore when fixing https://github.com/unoplatform/Uno.SourceGeneration/issues/122
      # NetCore_5_0:
      #   NETCORE_VERSION: 5.0.x
      #   NETCORE_PREVIEW: True
      NetCore_3_1:
        NETCORE_VERSION: 3.1.x
        NETCORE_PREVIEW: False
      NetCore_3_0:
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False

  container: unoplatform/wasm-build:2.0

  pool:
    vmImage: 'ubuntu-18.04'

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  steps:

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  # 2.1 is required for GitVersion@5
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 2.1 CLI
    inputs:
      version: 2.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # 3.0 is required for Source Generation sample
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 3.0 CLI
    inputs:
      version: 3.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: GitVersion@5
    inputs:
      configFilePath: '$(build.sourcesdirectory)/gitversion.yml'

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)/unosourcegenerator-drop/build'
        targetFolder: $(build.sourcesdirectory)/src/PackageCache

  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core $(NETCORE_VERSION) CLI
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - bash: msbuild /r /p:Configuration=Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /p:SAMPLES_BUILD=true ./src/Uno.SourceGenerator.Samples.Unix.sln /bl:$(build.artifactstagingdirectory)/binlog/linux-sample-build.binlog
    displayName: Build

    
  - task: DotNetCoreCLI@2
    displayName: Validate .NET Core 3.0 CLI build
    inputs:
      command: build
      arguments: "--configuration Release -p:SAMPLES_BUILD=true -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/linux-sample-build-netcore.binlog"
      workingDirectory: $(build.sourcesdirectory)/src/Uno.SampleCoreApp
      
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container

- job: macOS

  dependsOn:
  - Windows_VS2019

  variables:
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
    RestoreLockedMode: false # Until https://github.com/NuGet/Home/issues/8645

  strategy:
    matrix:
      # Restore when fixing https://github.com/unoplatform/Uno.SourceGeneration/issues/122
      # Xamarin_6_6_0_NetCore_5_0:
      #   XamarinVersion: 6_6_0
      #   VM_Image: 'macOS-10.15'
      #   NETCORE_VERSION: 5.0.x
      #   NETCORE_PREVIEW: True
      Xamarin_6_6_0_NetCore_3_1:
        XamarinVersion: 6_6_0
        VM_Image: 'macOS-10.15'
        NETCORE_VERSION: 3.1.x
        NETCORE_PREVIEW: False
      Xamarin_6_6_0_NetCore_3_0:
        XamarinVersion: 6_6_0
        VM_Image: 'macOS-10.15'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False
      Xamarin_6_4_0:
        XamarinVersion: 6_4_0
        VM_Image: 'macOS-10.14'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False
      Xamarin_6_0_0:
        XamarinVersion: 6_0_0
        VM_Image: 'macOS-10.14'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False
      Xamarin_5_18_1:
        XamarinVersion: 5_18_1
        VM_Image: 'macOS-10.14'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False
      Xamarin_5_16_0:
        XamarinVersion: 5_16_0
        VM_Image: 'macOS-10.14'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False
      Xamarin_5_12_0:
        XamarinVersion: 5_12_0
        VM_Image: 'macOS-10.14'
        NETCORE_VERSION: 3.0.100
        NETCORE_PREVIEW: False

  pool:
    vmImage: $(VM_Image)

  steps:
 
  # 2.1 is required for GitVersion@5
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 2.1 CLI
    inputs:
      version: 2.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # 3.0 is required for Source Generation sample
  - task: DotNetCoreInstaller@2
    displayName: Installing .NET Core 3.0 CLI
    inputs:
      version: 3.0.x
      installationPath: $(Agent.ToolsDirectory)/dotnet
     
  - task: GitVersion@5
    inputs:
      configFilePath: '$(build.sourcesdirectory)/gitversion.yml'

  - task: CacheBeta@0
    inputs:
      key: nuget | **/packages.lock.json
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  - task: DownloadBuildArtifacts@0
    inputs:
      ArtifactName: unosourcegenerator-drop
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: CopyFiles@2
    inputs:
        sourceFolder: '$(System.ArtifactsDirectory)/unosourcegenerator-drop/build'
        targetFolder: $(build.sourcesdirectory)/src/PackageCache

  - task: DotNetCoreInstaller@2
    inputs:
      version: $(NETCORE_VERSION)
      includePreviewVersions: $(NETCORE_PREVIEW)
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - bash: /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(XamarinVersion)"
    displayName: Select Xamarin Version

  - bash: msbuild /r /p:Configuration=Release /p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /p:SAMPLES_BUILD=true ./src/Uno.SourceGenerator.Samples.Unix.sln /bl:$(build.artifactstagingdirectory)/binlog/macos-sample-build-$(XamarinVersion).binlog
    displayName: Build

  - task: DotNetCoreCLI@2
    displayName: Validate .NET Core CLI build
    inputs:
      command: build
      arguments: "--configuration Release -p:SAMPLES_BUILD=true -p:SOURCEGEN_VERSION=$(GITVERSION.SemVer) /bl:$(build.artifactstagingdirectory)/binlog/macos-sample-build-$(XamarinVersion)-netcore.binlog"
      workingDirectory: $(build.sourcesdirectory)/src/Uno.SampleCoreApp
      
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/binlog
      ArtifactName: unosourcegenerator-binlog
      ArtifactType: Container
